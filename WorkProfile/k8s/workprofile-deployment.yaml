apiVersion: apps/v1
kind: Deployment
metadata:
  name: workprofile
spec:
  replicas: 2
  selector:
    matchLabels:
      app: workprofile
  template:
    metadata:
      labels:
        app: workprofile
    spec:
      initContainers:
      - name: wait-for-mysql
        image: mysql:5.7
        env:
          - name: MYSQL_HOST
            valueFrom:
              configMapKeyRef:
                name: workprofile-config
                key: DB_HOST
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-password
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: workprofile-config
                key: DB_NAME
        command: ['sh', '-c', 'until mysql -h "$MYSQL_HOST" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" "$MYSQL_DATABASE" -e "SELECT 1"; do echo "Waiting for MySQL..."; sleep 3; done']
      containers:
      - name: workprofile
        image: ghcr.io/cg865/workprofile:latest 
        imagePullPolicy: Always 
        ports:
        - containerPort: 5000
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: workprofile-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: workprofile-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: workprofile-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"